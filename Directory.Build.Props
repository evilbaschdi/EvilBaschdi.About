<Project>

	<PropertyGroup>
		<Authors>Sebastian Walter</Authors>
		<Company>evilbaschdi (Sebastian Walter)</Company>
		<Copyright>Copyright Â© 2015 - $([System.DateTime]::UtcNow.ToString(yyyy)) evilbaschdi</Copyright>
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<ImplicitUsings>enable</ImplicitUsings>
		<IsPackable>true</IsPackable>
		<LangVersion>preview</LangVersion>
		<PackageIcon>icon.png</PackageIcon>
		<PackageIconUrl><![CDATA[https://avatars1.githubusercontent.com/u/1897807?s=120&v=4]]></PackageIconUrl>
		<PackageProjectUrl>https://github.com/evilbaschdi/EvilBaschdi.About</PackageProjectUrl>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<RepositoryUrl>https://github.com/evilbaschdi/EvilBaschdi.About</RepositoryUrl>
		<VersionPrefix>$([System.DateTime]::UtcNow.ToString(yyyy.M.d.Hmm))</VersionPrefix>
	</PropertyGroup>

	<ItemGroup>
		<None Include="icon.png" Pack="true" Visible="false" PackagePath="" />
	</ItemGroup>

	<!-- Exact versions have to be set in Directory.Build.Targets -->
	<Choose>
		<When Condition="$(MSBuildProjectName.Contains('Wpf'))">
			<PropertyGroup>
				<TargetFrameworks>net0.0-windows</TargetFrameworks>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<TargetFrameworks>net0</TargetFrameworks>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<!-- ReSharper disable once UnknownProperty -->
	<PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
		<GenerateDocumentationFile>False</GenerateDocumentationFile>
		<IsPackable>false</IsPackable>
		<IsTestProject>true</IsTestProject>
		<NoWarn>1701;1702</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<Using Include="EvilBaschdi.Core" />
		<Using Include="JetBrains.Annotations" />
		<Using Include="EvilBaschdi.About.Core" />
		<Using Include="EvilBaschdi.About.Core.Models" />
	</ItemGroup>

	<!-- ReSharper disable once UnknownProperty -->
	<ItemGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
		<Using Include="AutoFixture.Idioms" />
		<Using Include="AutoFixture.Xunit2" />
		<Using Include="EvilBaschdi.Testing" />
		<Using Include="FluentAssertions" />
		<Using Include="FluentAssertions.Microsoft.Extensions.DependencyInjection" />
		<Using Include="NSubstitute" />
		<Using Include="NSubstitute.ReturnsExtensions" />
		<Using Include="Xunit" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="EvilBaschdi.Core" />
	</ItemGroup>

	<ItemGroup Condition="$(Description.Contains('Avalonia'))">
		<PackageReference Include="EvilBaschdi.Core.Avalonia" />
	</ItemGroup>

	<ItemGroup Condition="$(Description.Contains('Wpf'))">
		<PackageReference Include="EvilBaschdi.Core.Wpf" />
	</ItemGroup>

	<!-- ReSharper disable once UnknownProperty -->
	<ItemGroup Condition="'$(IsTestProject)' != 'true'">
		<PackageReference Include="DotNet.ReproducibleBuilds">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.SourceLink.AzureRepos.Git">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.SourceLink.GitHub">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
		<IsPackable>false</IsPackable>
		<IsTestProject>true</IsTestProject>
	</PropertyGroup>

	<!-- ReSharper disable once UnknownProperty -->
	<ItemGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
		<PackageReference Include="EvilBaschdi.Testing" />
		<PackageReference Include="Microsoft.NET.Test.Sdk" />
		<PackageReference Include="coverlet.collector">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="FluentAssertions.Analyzers">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Meziantou.FluentAssertionsAnalyzers">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="NSubstitute.Analyzers.CSharp">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="xunit.analyzers">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="xunit.runner.console">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="xunit.runner.visualstudio">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<!-- ReSharper disable once UnknownProperty -->
	<ItemGroup Condition="$(MSBuildProjectName.EndsWith('.Tests'))">
		<ProjectReference Include="..\$(MSBuildProjectName.Replace('.Tests',''))\$(MSBuildProjectName.Replace('.Tests','')).csproj" />
	</ItemGroup>

</Project>